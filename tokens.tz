{ parameter
    (or (or (or (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                (pair %create_token (pair (nat %decimals) (string %name)) (nat %supply)))
            (or (pair %mint_token (pair (nat %amount) (address %destination_addrs)) (nat %token_id))
                (list %transfer
                   (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))))
        (list %update_operators
           (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
               (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))) ;
  storage
    (pair (pair (pair (map %available_token_supply nat nat) (map %ledger (pair nat address) nat))
                (pair (nat %number_of_tokens) (map %operators (pair nat address) (list address))))
          (pair (map %token_metadata
                   nat
                   (pair (pair (nat %decimals) (string %name)) (pair (address %owner) (nat %token_id))))
                (map %token_total_supply nat nat))) ;
  code { LAMBDA
           (pair nat (map nat nat))
           bool
           { UNPAIR ;
             GET ;
             IF_NONE
               { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
               { DROP ; PUSH bool True } } ;
         LAMBDA
           (pair (pair nat address) (map (pair nat address) nat))
           nat
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair (pair nat address) (map (pair nat address) nat)) nat)
                 (pair (pair nat nat) (pair address (map (pair nat address) nat))))
           (map (pair nat address) nat)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; SWAP ; DUG 2 ; SWAP ; SOME ; SWAP ; UPDATE }
                { DIG 2 ; DIG 3 ; DIG 2 ; ADD ; SOME ; DIG 2 ; UPDATE } } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     MAP { DUP 4 ;
                           DUP 4 ;
                           DIG 2 ;
                           DUP ;
                           CAR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           PAIR ;
                           DIG 3 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           PAIR ;
                           DUP 10 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           SWAP ;
                           DUG 2 ;
                           PAIR ;
                           DUP 7 ;
                           SWAP ;
                           EXEC ;
                           SWAP ;
                           PAIR } ;
                     DIG 2 ;
                     DIG 3 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 4 ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     UNPAIR ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     DUP ;
                     SENDER ;
                     PAIR ;
                     DIG 4 ;
                     DIG 5 ;
                     PAIR ;
                     PAIR ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP 4 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     DUP 4 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     DUP 6 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DIG 3 ;
                     DIG 4 ;
                     DROP 2 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     CDR ;
                     DIG 2 ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     DUP 4 ;
                     GET ;
                     IF_NONE { PUSH string "invalid" ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { DROP 5 ; PUSH string "not authorised to mint" ; FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DUP 4 ;
                          GET ;
                          IF_NONE { PUSH string "invalid" ; FAILWITH } {} ;
                          DUP 5 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          LT ;
                          IF { DROP 6 ; PUSH string "not enough supply left" ; FAILWITH }
                             { DUP 3 ;
                               CAR ;
                               CAR ;
                               CAR ;
                               DUP 6 ;
                               DIG 2 ;
                               SUB ;
                               ABS ;
                               SOME ;
                               DUP 5 ;
                               UPDATE ;
                               DUP 3 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               DIG 2 ;
                               PAIR ;
                               DIG 4 ;
                               DIG 4 ;
                               PAIR ;
                               PAIR ;
                               DIG 3 ;
                               SWAP ;
                               EXEC ;
                               DUP 3 ;
                               CDR ;
                               DUP 4 ;
                               CAR ;
                               CDR ;
                               DIG 4 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               DIG 4 ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               DIG 3 ;
                               DIG 3 ;
                               CAR ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               PAIR } } ;
                     NIL operation ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUG 2 ;
                     UNPAIR ;
                     DIG 3 ;
                     DIG 3 ;
                     ITER { SWAP ;
                            DUP 4 ;
                            SWAP ;
                            PAIR ;
                            DUP 3 ;
                            DUG 2 ;
                            UNPAIR ;
                            DUP 3 ;
                            CDR ;
                            ITER { SWAP ;
                                   DUP 5 ;
                                   DUP 5 ;
                                   CAR ;
                                   DUP 4 ;
                                   GET 3 ;
                                   PAIR ;
                                   GET ;
                                   IF_NONE { PUSH string "wasnt found" ; FAILWITH } {} ;
                                   SENDER ;
                                   PUSH bool False ;
                                   DIG 2 ;
                                   ITER { SWAP ;
                                          PUSH bool True ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { SWAP ; DROP }
                                             { DROP ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               SWAP ;
                                               COMPARE ;
                                               EQ ;
                                               IF { PUSH bool True } { PUSH bool False } } } ;
                                   SWAP ;
                                   DROP ;
                                   DUP 5 ;
                                   CAR ;
                                   SENDER ;
                                   COMPARE ;
                                   EQ ;
                                   OR ;
                                   IF { PUSH bool True } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                   DUP 4 ;
                                   DUP 4 ;
                                   GET 3 ;
                                   PAIR ;
                                   DUP 13 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP 2 ;
                                   DUP 4 ;
                                   CAR ;
                                   PAIR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 4 ;
                                   DUP 3 ;
                                   GET 3 ;
                                   DIG 2 ;
                                   UNPAIR ;
                                   DIG 2 ;
                                   PAIR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   PAIR ;
                                   DUP 13 ;
                                   SWAP ;
                                   EXEC ;
                                   DUP 4 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   COMPARE ;
                                   LT ;
                                   IF { DROP 4 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                                      { DIG 2 ; DIG 3 ; DIG 2 ; SUB ; ABS ; SOME ; DIG 2 ; UPDATE } ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   PAIR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 4 ;
                                   DIG 2 ;
                                   GET 3 ;
                                   PAIR ;
                                   PAIR ;
                                   DUP 8 ;
                                   SWAP ;
                                   EXEC } ;
                            SWAP ;
                            DIG 2 ;
                            DIG 3 ;
                            DROP 3 } ;
                     SWAP ;
                     DIG 2 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DROP 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             SWAP ;
             ITER { IF_LEFT
                      { DUP ;
                        CAR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET 4 ;
                        PAIR ;
                        DIG 2 ;
                        DUP ;
                        DUP 3 ;
                        GET ;
                        IF_NONE { NIL address } {} ;
                        DIG 3 ;
                        GET 3 ;
                        CONS ;
                        SOME ;
                        DIG 2 ;
                        UPDATE }
                      { DUP ;
                        CAR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET 4 ;
                        PAIR ;
                        DUP 3 ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET ;
                        IF_NONE { PUSH string "wasnt found" ; FAILWITH } {} ;
                        NIL address ;
                        SWAP ;
                        NIL address ;
                        SWAP ;
                        ITER { CONS } ;
                        ITER { DUP 4 ;
                               GET 3 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP } { CONS } } ;
                        DIG 2 ;
                        DROP ;
                        DIG 2 ;
                        SWAP ;
                        SOME ;
                        DIG 2 ;
                        UPDATE } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             DUP 3 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR } } }
